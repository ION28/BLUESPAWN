name: BLUESPAWN-win-client build

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    - develop

jobs:
  build:

    strategy:
      matrix:
        buildtype: [Release, Debug]
        buildarch: [x64, x86]

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@main

    - name: Update submodules
      run: git submodule update --init --recursive

#    - name: Install latest CMake.
#      uses: lukka/get-cmake@latest

#    - name: Restore from cache, and install vcpkg and project dependencies
#      uses: lukka/run-vcpkg@v7
#      with:
#        vcpkgArguments: '@../vcpkg_response_file.txt'
#        vcpkgDirectory: 'vcpkg'
#        appendedCacheKey: ${{ hashFiles(env.vcpkgResponseFile) }}

    - name: Create download dir
      shell: cmd
      run: "mkdir D:\\a\\BLUESPAWN\\BLUESPAWN\\vcpkg\\downloads\\"

    - name: Create log dir
      shell: cmd
      run: "mkdir D:\\a\\BLUESPAWN\\BLUESPAWN\\vcpkg\\buildtrees\\bzip2\\"

    - name: Create log file
      shell: cmd
      run: "copy NUL D:\\a\\BLUESPAWN\\BLUESPAWN\\vcpkg\\buildtrees\\bzip2\\git-init-x64-windows-static-out.log"

    - name: Create err file
      shell: cmd
      run: "copy NUL D:\\a\\BLUESPAWN\\BLUESPAWN\\vcpkg\\buildtrees\\bzip2\\git-init-x64-windows-static-err.log"

    - name: Install vcpkg packages
      shell: cmd
      run: "cd vcpkg && .\\bootstrap-vcpkg.bat && .\\vcpkg.exe install @../vcpkg_response_file.txt --debug && cd .."

    - name: Print log dir files
      if: ${{ failure() }}
      shell: cmd
      run: "dir D:\\a\\BLUESPAWN\\BLUESPAWN\\vcpkg\\buildtrees\\bzip2\\ && dir \"C:\\Program Files\\Git\\bin\\\""

#    - name: Start SSH session
#      if: ${{ failure() }}
#      uses: luchihoratiu/debug-via-ssh@main
#      with:
#        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
#        SSH_PASS: ${{ secrets.SSH_PASS }}

    - name: Integrate vcpkg packages
      shell: powershell
      run: |
        cd vcpkg
        .\vcpkg.exe integrate install
        cd ..

    - name: Build BLUESPAWN-client
      run: |
        "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" BLUESPAWN.sln /p:Configuration=${{ matrix.buildtype }} /p:Platform=${{ matrix.buildarch }}
      shell: cmd

    - name: Set PowerShell Execution Policy
      run: powershell set-executionpolicy Unrestricted
      shell: powershell

    - name: Run Atomic Red Team Prep Script
      run: testing\run-atomic-prep.ps1
      shell: powershell

    - name: Run Atomic Red Team Tests
      run: testing\run-atomic-tests.ps1
      shell: powershell

    - name: Run BLUESPAWN Hunt
      run: artifacts\${{ matrix.buildarch }}\${{ matrix.buildtype }}\BLUESPAWN-client.exe --hunt -a Normal --log=xml
      shell: cmd

    - name: Rename BLUESPAWN XML output file
      run: Get-ChildItem "bluespawn*.xml" | Rename-Item -NewName BLUESPAWNHuntResults.xml
      shell: powershell

    - name: TESTS - Check BLUESPAWN Hunt Results against Atomic Red Team Results
      run: testing\run-hunt-results-comparison.ps1
      shell: powershell

    - uses: actions/upload-artifact@main
      with:
        name: BLUESPAWN-client-${{ matrix.buildarch }}-${{ matrix.buildtype }}
        path: artifacts\${{ matrix.buildarch }}\${{ matrix.buildtype }}\BLUESPAWN-client.exe

    - uses: actions/upload-artifact@main
      with:
        name: AtomicTestsResults-${{ matrix.buildarch }}-${{ matrix.buildtype }}.csv
        path: AtomicTestsResults.csv

    - uses: actions/upload-artifact@main
      with:
        name: BLUESPAWNHuntResults-${{ matrix.buildarch }}-${{ matrix.buildtype }}.xml
        path: BLUESPAWNHuntResults.xml
